<?xml version="1.0"?>
<launch>
  <env name="GAZEBO_MODEL_PATH" value="$(find robocar_world)/models"/>
  <env name="GAZEBO_RESOURCE_PATH" value="$(find robocar_world)"/>
  
  <!-- <arg name="world_name" default="$(find robocar_world)/worlds/empty.world"/> -->
  <!-- <arg name="world_name" default="$(find robocar_world)/worlds/road.world"/> -->
  <arg name="world_name" default="$(find robocar_world)/worlds/conde.world"/>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <!-- <arg name="model"/> -->
  <arg name="model" default="$(find robocar_ackermann_description)/urdf/car.xacro"/>
  <!-- <arg name="joint_params" default="$(find robocar_simulation)/config/wheel.yaml"/> -->
  <arg name="joint_params" default="$(find robocar_simulation)/config/em_3905_joint_ctrlr_params.yaml"/>
  
  <!-- vehicle pose -->
  <arg name="x" default="-0.5"/>
  <arg name="y" default="0"/>
  <arg name="z" default="0.5"/>
  <arg name="roll" default="0.0"/>
  <arg name="pitch" default="0.0"/>
  <arg name="yaw" default="0"/>

  <arg name="cmd_timeout" default="0.5"/>

  <arg name="camera_params" default="$(find robocar_config)/camera_calibration.yaml"/>

  <arg name="goal_mode" default="forward" />

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro $(arg model)"/>

  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"
        args="-param robot_description -urdf -model robocar_robot
              -x $(arg x) -y $(arg y) -z $(arg z)
              -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>
  
  <node name="controller_spawner" pkg="controller_manager" type="spawner"
    args="$(arg joint_params)" output="screen"/>

  <!-- Control the steering, axle, and shock absorber joints. -->
  <!-- <node name="ackermann_controller" pkg="robocar_simulation"
        type="ackermann_controller.py"
        output="screen">
    <param name="cmd_timeout" value="$(arg cmd_timeout)"/>
    <rosparam file="$(find robocar_simulation)/config/em_3905_ackermann_ctrlr_params.yaml" command="load"/>
  </node> -->

  <node name="vehicle_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher">
    <param name="publish_frequency" value="30.0"/>
  </node>
  
  <!-- node for visualizing camera images -->
  <node name="image_view" pkg="image_view" type="image_view">
      <remap from="image" to="camera/rgb/image_raw" />
  </node>
 
  <node name="republish" pkg="image_transport" type="republish" args="raw in:=/camera/rgb/image_raw compressed out:=/raspicam_node/image" /> 
  
  <node type="lf_node.py" pkg="lane_follow" name="lf_node" output="screen">
    <param name="camera_params" value="$(arg camera_params)"/>
  </node>

  <arg name="rvizconfig" default="$(find robocar_simulation)/config/robocar.rviz" />
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />
  <!-- <node type="obstacle_detection.py" pkg="avoid_obstacles" name="obstacle_detection" output="screen">
  </node> -->
 <!--Maybe we don't need this:
   <node name="image_saver" pkg="image_view" type="image_saver">
      <remap from="image" to="camera/rgb/image_raw" />
  </node> -->

  <node type="pid_supervisor.py" pkg="pid_controller" name="pid_supervisor" output="screen">
  </node>
  
  <!-- <node type="gtg.py" pkg="pid_controller" name="gtg" output="screen" >
    <param name="mode" type="string" value="$(arg goal_mode)" />
  </node> -->

</launch>
